name: api-docker

on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  DOCKER_TAG: ${{ github.ref == 'refs/heads/master' && 'prod-' || 'dev-' }}${{ github.sha }}
  DOCKER_REPOSITORY: "aerabi/aerabi-k8s"
  GITHUB_REGISTRY: "ghcr.io"
  GITHUB_REPOSITORY: "aerabi/aerabi-k8s"

jobs:
  build_image:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write
    outputs:
      image-name: ${{ steps.build_image.outputs.image-name }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub üê≥
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Echo image tags
        run: |
          echo ${{ env.GITHUB_REGISTRY }}/${{ env.GITHUB_REPOSITORY }}:${{ env.DOCKER_TAG }}
          echo ${{ env.DOCKER_REPOSITORY }}:${{ env.DOCKER_TAG }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: api
          push: true
          sbom: true
          platforms: linux/amd64,linux/arm64,linux/arm64/v8
          tags: |
            ${{ env.GITHUB_REGISTRY }}/${{ env.GITHUB_REPOSITORY }}:${{ env.DOCKER_TAG }}
            ${{ env.DOCKER_REPOSITORY }}:${{ env.DOCKER_TAG }}

  scan_image:
    runs-on: ubuntu-latest
    permissions:
      packages: read
    needs: [ build_image ]
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.GITHUB_REGISTRY }}/${{ env.GITHUB_REPOSITORY }}:${{ env.DOCKER_TAG }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
